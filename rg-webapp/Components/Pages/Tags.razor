@page "/tags"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using rg_wellbeing.Auth.Models
@using rg_wellbeing.Content
@rendermode InteractiveServer
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Wellbeing Tags</PageTitle>

<h5>Tags</h5>
<div class="form-group">
    <InputText @bind-Value=TagSearch class="form-control" id="WellbeingTagsInput" />
    <div class="form-group">
        <button @onclick="FilterTags" type="submit" class="btn btn-primary">Filter</button>
    </div>
</div>
<ul>
    @if (tagsResponse != null)
    {
        @foreach (var tag in tagsResponse.Tags.OrderBy(p => p.Title))
        {
            <li>
                <strong>@tag.Title</strong> - @tag.Uuid
            </li>
        }
    }
</ul>

@code {
    public string TagSearch { get; set; } = "?name[]=yoga&name[]=15min";
    RgContentManager rgContentManager;
    RGWellbeingTagsResponse tagsResponse;

    ProtectedBrowserStorageResult<RgPartnerAuthResponse?> token;

    public string ErrorMsg { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        token = await ProtectedSessionStore.GetAsync<RgPartnerAuthResponse?>(RgSessionKeys.Token);

        if (!token.Success || token.Value == null)
        {
            throw new InvalidOperationException("You must authenticate before using this page.");
        }

        if (firstRender)
        {
            rgContentManager = new RgContentManager(token.Value, true);
            tagsResponse = await rgContentManager.GetTags();

            StateHasChanged();
        }
    }

    public async Task FilterTags()
    {
        tagsResponse = await rgContentManager.GetTags(TagSearch);
        StateHasChanged();
    }
}
